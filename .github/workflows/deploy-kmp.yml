name: Build KMP

on:
  push:
    branches:
      - main
    paths:
      - 'kmp/**'

permissions:
  contents: write

jobs:
  build-kmp:
    name: Build KMP
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Generate build info
        id: build_info
        run: |
          echo "timestamp=$(date +'%Y%m%d_%H%M%S')" >> $GITHUB_OUTPUT
          echo "build_number=${{ github.run_number }}" >> $GITHUB_OUTPUT
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Writing to local.properties
        run: |
          cat > kmp/local.properties << EOF
          GOOGLE_AUTH_SERVER_ID=${{ secrets.GOOGLE_AUTH_SERVER_ID }}
          API_BASE_URL=${{ secrets.API_BASE_URL }}
          EOF

      - name: Configure signing properties
        run: |
          cat >> kmp/gradle.properties << EOF
          
          # Release signing configuration (from CI secrets)
          GOOGLE_AUTH_SERVER_ID=${{ secrets.GOOGLE_AUTH_SERVER_ID }}
          RELEASE_STORE_FILE=../release-keystore.jks
          RELEASE_KEY_ALIAS=${{ secrets.RELEASE_KEY_ALIAS }}
          RELEASE_KEY_PASSWORD=${{ secrets.RELEASE_KEY_PASSWORD }}
          RELEASE_STORE_PASSWORD=${{ secrets.RELEASE_STORE_PASSWORD }}
          API_BASE_URL=${{ secrets.API_BASE_URL }}
          EOF

      - name: Create keystore
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" | base64 -d > kmp/release-keystore.jks

      - name: Build Android APK
        run: |
          cd kmp
          ./gradlew :androidApp:assembleRelease --no-daemon

      - name: Create artifact archive
        run: |
          mkdir -p artifacts
          
          # Find and copy APK with a consistent name
          find kmp/androidApp/build/outputs/apk/release -name "*.apk" -exec cp {} artifacts/fastbreak-release.apk \;
          cp kmp/shared/build/libs/*.jar artifacts/ || true
          
          # Create build info file
          echo "Build Number: ${{ steps.build_info.outputs.build_number }}" > artifacts/build_info.txt
          echo "Timestamp: ${{ steps.build_info.outputs.timestamp }}" >> artifacts/build_info.txt
          echo "Commit: ${{ steps.build_info.outputs.short_sha }}" >> artifacts/build_info.txt
          echo "Branch: ${{ github.ref_name }}" >> artifacts/build_info.txt
          
          # List contents for debugging
          ls -la artifacts/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v0.0.1-alpha-${{ steps.build_info.outputs.build_number }}
          release_name: Fastbreak v0.0.1-alpha-${{ steps.build_info.outputs.build_number }}
          body: |
            ## Fastbreak v0.0.1-alpha-${{ steps.build_info.outputs.build_number }}
            
            **Build Info:**
            - Build Number: ${{ steps.build_info.outputs.build_number }}
            - Timestamp: ${{ steps.build_info.outputs.timestamp }}
            - Commit: ${{ steps.build_info.outputs.short_sha }}
            - Branch: ${{ github.ref_name }}
            
            **Changes:**
            ${{ github.event.head_commit.message }}
          draft: false
          prerelease: true

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/fastbreak-release.apk
          asset_name: fastbreak-v0.0.1-alpha-${{ steps.build_info.outputs.build_number }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload Build Info to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/build_info.txt
          asset_name: build_info.txt
          asset_content_type: text/plain       